import { NextResponse } from "next/server";
import type { NextRequest } from "next/server";
import { jwtVerify } from "jose";

const JWT_SECRET = new TextEncoder().encode(process.env.JWT_SECRET!);

export async function middleware(request: NextRequest) {
  const pathname = request.nextUrl.pathname;
  const token = request.cookies.get("admin_token")?.value;

  console.log("üåê Path:", pathname);
  console.log("üç™ Token:", token);

  // ‚ùå ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ token ‚Üí redirect ‡πÑ‡∏õ /signin
  if (!token) {
    console.log("‚õî ‡πÑ‡∏°‡πà‡∏°‡∏µ token ‚Üí redirect");
    return NextResponse.redirect(new URL("/signin", request.url));
  }

  // ‚úÖ ‡∏°‡∏µ token ‚Üí verify
  try {
    await jwtVerify(token, JWT_SECRET);
    console.log("‚úÖ Token valid ‚Üí ‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏ú‡πà‡∏≤‡∏ô");
    return NextResponse.next();
  } catch (err) {
    console.warn("‚ö†Ô∏è Token ‡πÑ‡∏°‡πà valid ‚Üí redirect", err);
    return NextResponse.redirect(new URL("/signin", request.url));
  }
}

export const config = {
  matcher: ["/", "/categories/:path*", "/slides/:path*", "/users/:path*", "/admin/:path*"],
};
